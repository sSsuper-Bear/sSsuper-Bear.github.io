<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SuperBear&#39;s blog</title>
  
  
  <link href="https://sssuper-bear.github.io/atom.xml" rel="self"/>
  
  <link href="https://sssuper-bear.github.io/"/>
  <updated>2021-05-25T12:23:33.952Z</updated>
  <id>https://sssuper-bear.github.io/</id>
  
  <author>
    <name>SuperBear</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>bootdo项目通过jar包启动</title>
    <link href="https://sssuper-bear.github.io/2021/05/24/bootdo%E9%A1%B9%E7%9B%AE%E9%80%9A%E8%BF%87jar%E5%8C%85%E5%90%AF%E5%8A%A8/"/>
    <id>https://sssuper-bear.github.io/2021/05/24/bootdo%E9%A1%B9%E7%9B%AE%E9%80%9A%E8%BF%87jar%E5%8C%85%E5%90%AF%E5%8A%A8/</id>
    <published>2021-05-24T12:56:15.000Z</published>
    <updated>2021-05-25T12:23:33.952Z</updated>
    
    <content type="html"><![CDATA[<h3 id="bootdo项目通过jar包启动"><a href="#bootdo项目通过jar包启动" class="headerlink" title="bootdo项目通过jar包启动"></a>bootdo项目通过jar包启动</h3><ul><li><p>本项目来自<a href="https://gitee.com/lcg0124/bootdo">gitee李春光</a>，具体<a href="https://gitee.com/lcg0124/bootdo/wikis/%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE?sort_id=64319">参考文档</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b57c6d1a9ae528fa2373d.png" alt="image-20210304220122324"></p></li><li><p>首先在本地IDEA启动成功</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b57dbd1a9ae528fa2e9f5.png" alt="image-20210304215220295"></p><ul><li>进入网址</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b57ebd1a9ae528fa36741.png" alt="image-20210304215801788"></p><ul><li><p>使用maven打包bootdo并运行，bootdo项目生成jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">maven clean</span><br><span class="line">maven package</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b57fcd1a9ae528fa3f3c0.png" alt="image-20210408152239126"></p><ul><li>把test文件都给注释掉</li></ul></li><li><p>把jar包和Dockerfile文件放到同一目录下</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b5812d1a9ae528fa4a47c.png" alt="image-20210408160354212"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Dockerfile</span><br><span class="line">  1 FROM java:8</span><br><span class="line">  2 </span><br><span class="line">  3 VOLUME /tmp</span><br><span class="line">  4 </span><br><span class="line">  5 COPY bootdo-2.0.0.jar app.jar</span><br><span class="line">  6 </span><br><span class="line">  7 RUN bash -c &quot;touch /app.jar&quot;</span><br><span class="line">  8 </span><br><span class="line">  9 EXPOSE 8088</span><br><span class="line"> 10 </span><br><span class="line"> 11 ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;app.jar&quot;, &quot;--spring.profiles.active=test&quot;, &quot;--server.port=8088&quot;, &quot;&gt; /log/app.log&quot;]</span><br></pre></td></tr></table></figure></li><li><p>运行指令将jar包打包成镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image build -t bootdo-2.0.0 .</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b582ad1a9ae528fa55ad7.png" alt="image-20210408160443433"></p></li><li><p>查看镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b5839d1a9ae528fa5d370.png" alt="image-20210408160750151"></p></li><li><p>通过jar包运行项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar study-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b584bd1a9ae528fa6621d.png" alt="image-20210422091705400"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/608b5859d1a9ae528fa6d3c6.png" alt="image-20210422091719557"></p></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://blog.csdn.net/qq_37525899/article/details/86736835">使用maven打包bootdo并运行</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;bootdo项目通过jar包启动&quot;&gt;&lt;a href=&quot;#bootdo项目通过jar包启动&quot; class=&quot;headerlink&quot; title=&quot;bootdo项目通过jar包启动&quot;&gt;&lt;/a&gt;bootdo项目通过jar包启动&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本项目来自</summary>
      
    
    
    
    <category term="代码" scheme="https://sssuper-bear.github.io/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="java" scheme="https://sssuper-bear.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记</title>
    <link href="https://sssuper-bear.github.io/2021/05/24/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://sssuper-bear.github.io/2021/05/24/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-05-24T12:54:08.000Z</published>
    <updated>2021-05-24T12:55:14.937Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="一、如何使用终端操作数据库"><a href="#一、如何使用终端操作数据库" class="headerlink" title="一、如何使用终端操作数据库"></a>一、如何使用终端操作数据库</h3></li><li><p>如何登陆数据库服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d324d8322e6675c0c2074.png" alt="image-20210419101047635"></p></li><li><p>如何查询数据库服务器中所有的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases；</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d32998322e6675c0cc068.png" alt="image-20210419100514663"></p></li><li><p>如何选中某一个数据库进行操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use sushe；</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d32c78322e6675c0d1a07.png" alt="image-20210419100606162"></p><ul><li>SQL语句中的查询</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin；</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d32d58322e6675c0d3364.png" alt="image-20210419100728472"></p><ul><li><p>只查询Admin_ID中的一条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where Admin_ID=1；</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d32e48322e6675c0d4e65.png" alt="image-20210419102716439"></p></li><li><p>如何退出数据库服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit；</span><br></pre></td></tr></table></figure></li><li><p>如何在数据库服务器中创建我们的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database test；</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d32f18322e6675c0d6763.png" alt="image-20210419103011881"></p></li><li><p>使用test数据库进行操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use test；</span><br></pre></td></tr></table></figure></li><li><p>查看数据库中的数据表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables；</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d32ff8322e6675c0d82bc.png" alt="image-20210419103151476"></p></li><li><p>创建一个数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pet (</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">owner <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">species <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">sex <span class="type">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">birth <span class="type">DATE</span>,</span><br><span class="line">death <span class="type">DATE</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33118322e6675c0da562.png" alt="image-20210419103553869"></p></li><li><p>查看数据表是否创建成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables；</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d331d8322e6675c0dbd0b.png" alt="image-20210419103659284"></p></li><li><p>查看创建好的数据表的结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">describe pet;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d332e8322e6675c0dde96.png" alt="image-20210419103818698"></p></li><li><p>查看数据表中的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pet;</span><br></pre></td></tr></table></figure><p> <img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33498322e6675c0e1431.png" alt="image-20210419104228606"></p></li><li><p>如何往数据表中添加数据记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> pet</span><br><span class="line"><span class="keyword">VALUES</span> （<span class="string">&#x27;Puffball&#x27;</span>,<span class="string">&#x27;Diane&#x27;</span>,<span class="string">&#x27;hamster&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;1999-03-30&#x27;</span>,<span class="keyword">NULL</span>）;</span><br></pre></td></tr></table></figure></li><li><p>再次查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pet;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33568322e6675c0e2c64.png" alt="image-20210419104507492"></p></li><li><p>删除数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> pet <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;Fluffy&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33658322e6675c0e4753.png" alt="image-20210419110249261"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33738322e6675c0e6013.png" alt="image-20210419110317720"></p></li><li><p>修改数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update pet <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;旺旺才&#x27;</span> <span class="keyword">where</span> owner<span class="operator">=</span><span class="string">&#x27;周星驰&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>mysql常用数据类型</p><ul><li><p>日期选择按照格式；数值字符串按照大小！</p></li><li><p>MySQL支持多种类型，大致可以分为三类：</p></li><li><p>数值</p><table><thead><tr><th align="left">类型</th><th align="left">大小</th><th align="left">范围（有符号）</th><th align="left">范围（无符号）</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">TINYINT</td><td align="left">1 byte</td><td align="left">(-128，127)</td><td align="left">(0，255)</td><td align="left">小整数值</td></tr><tr><td align="left">SMALLINT</td><td align="left">2 bytes</td><td align="left">(-32 768，32 767)</td><td align="left">(0，65 535)</td><td align="left">大整数值</td></tr><tr><td align="left">MEDIUMINT</td><td align="left">3 bytes</td><td align="left">(-8 388 608，8 388 607)</td><td align="left">(0，16 777 215)</td><td align="left">大整数值</td></tr><tr><td align="left">INT或INTEGER</td><td align="left">4 bytes</td><td align="left">(-2 147 483 648，2 147 483 647)</td><td align="left">(0，4 294 967 295)</td><td align="left">大整数值</td></tr><tr><td align="left">BIGINT</td><td align="left">8 bytes</td><td align="left">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td align="left">(0，18 446 744 073 709 551 615)</td><td align="left">极大整数值</td></tr><tr><td align="left">FLOAT</td><td align="left">4 bytes</td><td align="left">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td align="left">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td align="left">单精度 浮点数值</td></tr><tr><td align="left">DOUBLE</td><td align="left">8 bytes</td><td align="left">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">双精度 浮点数值</td></tr><tr><td align="left">DECIMAL</td><td align="left">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td align="left">依赖于M和D的值</td><td align="left">依赖于M和D的值</td><td align="left">小数值</td></tr></tbody></table></li><li><p>日期/时间</p><table><thead><tr><th align="left">类型</th><th align="left">大小 ( bytes)</th><th align="left">范围</th><th align="left">格式</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">DATE</td><td align="left">3</td><td align="left">1000-01-01/9999-12-31</td><td align="left">YYYY-MM-DD</td><td align="left">日期值</td></tr><tr><td align="left">TIME</td><td align="left">3</td><td align="left">‘-838:59:59’/‘838:59:59’</td><td align="left">HH:MM:SS</td><td align="left">时间值或持续时间</td></tr><tr><td align="left">YEAR</td><td align="left">1</td><td align="left">1901/2155</td><td align="left">YYYY</td><td align="left">年份值</td></tr><tr><td align="left">DATETIME</td><td align="left">8</td><td align="left">1000-01-01 00:00:00/9999-12-31 23:59:59</td><td align="left">YYYY-MM-DD HH:MM:SS</td><td align="left">混合日期和时间值</td></tr><tr><td align="left">TIMESTAMP</td><td align="left">4</td><td align="left">1970-01-01 00:00:00/2038结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td align="left">YYYYMMDD HHMMSS</td><td align="left">混合日期和时间值，时间戳</td></tr></tbody></table></li><li><p>字符串（字符）</p><table><thead><tr><th align="left">类型</th><th align="left">大小</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">CHAR</td><td align="left">0-255 bytes</td><td align="left">定长字符串</td></tr><tr><td align="left">VARCHAR</td><td align="left">0-65535 bytes</td><td align="left">变长字符串</td></tr><tr><td align="left">TINYBLOB</td><td align="left">0-255 bytes</td><td align="left">不超过 255 个字符的二进制字符串</td></tr><tr><td align="left">TINYTEXT</td><td align="left">0-255 bytes</td><td align="left">短文本字符串</td></tr><tr><td align="left">BLOB</td><td align="left">0-65 535 bytes</td><td align="left">二进制形式的长文本数据</td></tr><tr><td align="left">TEXT</td><td align="left">0-65 535 bytes</td><td align="left">长文本数据</td></tr><tr><td align="left">MEDIUMBLOB</td><td align="left">0-16 777 215 bytes</td><td align="left">二进制形式的中等长度文本数据</td></tr><tr><td align="left">MEDIUMTEXT</td><td align="left">0-16 777 215 bytes</td><td align="left">中等长度文本数据</td></tr><tr><td align="left">LONGBLOB</td><td align="left">0-4 294 967 295 bytes</td><td align="left">二进制形式的极大文本数据</td></tr><tr><td align="left">LONGTEXT</td><td align="left">0-4 294 967 295 bytes</td><td align="left">极大文本数据</td></tr></tbody></table><h3 id="mysql建表约束"><a href="#mysql建表约束" class="headerlink" title="mysql建表约束"></a>mysql建表约束</h3></li><li><p>主键约束</p><ul><li><p>它能够唯一确定一张表中的一条记录，也就是我们通过给某个字段添加约束，就可以使得该字段不重复且不为空。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE user (</span><br><span class="line">    id INT PRIMARY KEY,</span><br><span class="line">    name VARCHAR(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d34858322e6675c10a412.png" alt="image-20210419111116893"></p><ul><li>– 联合主键<br>– 联合主键中的每个字段都<strong>不能为空</strong>，并且<strong>加起来</strong>不能和已设置的联合主键重复。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    password <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(id, name)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>自增约束</p><ul><li>管控id的值让他可以增长</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> (name) <span class="keyword">values</span>(<span class="string">&#x27;zhangsan&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li><p>忘记创建主键约束怎么办，可以通过SQL语句设置（两种方式）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>```<br>desc user<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20210419135347642](https://img.imgdb.cn/item/607d33918322e6675c0e993b.png)</span><br><span class="line"></span><br><span class="line">* 修改表结构，添加主键</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">ALTER TABLE user ADD PRIMARY KEY(id);</span><br><span class="line">ALTER TABLE user MODIFY id INT PRIMARY KEY;</span><br></pre></td></tr></table></figure></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d339c8322e6675c0eb30b.png" alt="image-20210419140048250"></p><ul><li><p>如何删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">drop</span> <span class="keyword">primary</span> key;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33aa8322e6675c0ed7de.png" alt="image-20210419140205166"></p></li></ul></li></ul></li><li><p>唯一约束</p><ul><li>约束修饰的字段的值不能重复</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><p>添加唯一约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> <span class="keyword">unique</span>(name);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33b68322e6675c0eed4b.png" alt="image-20210419140558495"></p></li><li><p>创建表的时候添加唯一约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)，</span><br><span class="line">    <span class="keyword">unique</span>(name)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 或者</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span><span class="keyword">unique</span>(id,name)表示两个键在一起不重复就行</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">unique</span>(id,name)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33c58322e6675c0f0b88.png" alt="image-20210419140816729"></p></li><li><p>删除唯一约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">drop</span> index name;</span><br></pre></td></tr></table></figure></li><li><p>modify添加</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> modify <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span>;</span><br></pre></td></tr></table></figure></li><li><p>总结：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、建表的时候添加约束</span><br><span class="line">2、可以使用alter... add ...</span><br><span class="line">3、alter... modify ...</span><br><span class="line">4、删除alter ... drop ...</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>非空约束</p><ul><li><p>修饰的字段不能为空</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33d38322e6675c0f2817.png" alt="image-20210419141716219"></p></li><li><p>不传入name值会报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> (id) <span class="keyword">values</span>(<span class="number">1</span>);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>正确用法</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> uservalues(<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>默认约束</p><ul><li><p>当我们插入字段值时，如果没有传值，就会使用默认值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    age <span class="type">int</span> <span class="keyword">default</span> <span class="number">10</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33e08322e6675c0f4744.png" alt="image-20210419142616113"></p></li></ul></li><li><p>外键约束</p><ul><li><p>涉及到两个表：父表，子表</p></li><li><p>主表，副表</p></li><li><p>班级表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> classes(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>学生表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> classes(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    class_id <span class="type">int</span>,</span><br><span class="line">    <span class="keyword">foreign</span> key(class_id) <span class="keyword">references</span> classes(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d33f68322e6675c0f7d6a.png" alt="image-20210419143103219"></p></li><li><p>插入四个班</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;一班&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;二班&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;三班&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;四班&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d34068322e6675c0fa28e.png" alt="image-20210419143606566"></p></li><li><p>往对应的班级添加学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;一班&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;二班&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;三班&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> calsses <span class="keyword">values</span>(<span class="number">1004</span>,<span class="string">&#x27;四班&#x27;</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure></li><li><p>结论</p><ul><li>主表classes中没有的数据值，在副表中，是不可以使用的。</li><li>主表中的记录被副表引用，是不可以被删除的。 </li></ul></li></ul></li></ul><h3 id="数据库的三大设计范式"><a href="#数据库的三大设计范式" class="headerlink" title="数据库的三大设计范式"></a>数据库的三大设计范式</h3><ul><li><p>第一范式（1NF)</p><ul><li><p>数据表中的所有字段都是不可分割的原子值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    address <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">inser <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;中国四川省成都市武侯区武侯大道100号&#x27;</span>);</span><br><span class="line">inser <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;中国四川省成都市武侯区武侯大道200号&#x27;</span>);</span><br><span class="line">inser <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;中国四川省成都市武侯区武侯大道300号&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d34198322e6675c0fca93.png" alt="image-20210419150252138"></p></li><li><p>字段还可以继续拆分，就不满足第一范式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    country <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">    privence <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">    city <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">    details <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">inser <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;四川省&#x27;</span>,<span class="string">&#x27;成都市&#x27;</span>,<span class="string">&#x27;武侯区武侯大道100号&#x27;</span>);</span><br><span class="line">inser <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;四川省&#x27;</span>,<span class="string">&#x27;成都市&#x27;</span>,<span class="string">&#x27;武侯区武侯大道100号&#x27;</span>);</span><br><span class="line">inser <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;四川省&#x27;</span>,<span class="string">&#x27;成都市&#x27;</span>,<span class="string">&#x27;武侯区武侯大道100号&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607d34268322e6675c0fe63e.png" alt="image-20210419150357502"></p></li><li><p>范式，设计的越详细，对于某些实际操作可能更好，单不一定都是好处。</p></li></ul></li><li><p>第二范式（2NF）</p><ul><li><p>在满足第一范式的前提下，其他列都必须完全依赖于主键列。</p></li><li><p>如果出现不完全依赖，只可能发生在联合主键的情况下。</p></li><li><p>订单表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> myorder (</span><br><span class="line">    product_id <span class="type">INT</span>,</span><br><span class="line">    customer_id <span class="type">INT</span>,</span><br><span class="line">    product_name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    customer_name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (product_id, customer_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>除了主键以外的列，只依赖于主键的部分字段。</p></li><li><p>实际上，在这张订单表中，<code>product_name</code> 只依赖于 <code>product_id</code> ，<code>customer_name</code> 只依赖于 <code>customer_id</code> 。也就是说，<code>product_name</code> 和 <code>customer_id</code> 是没用关系的，<code>customer_name</code> 和 <code>product_id</code> 也是没有关系的。</p></li><li><p>拆表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> myorder (</span><br><span class="line">    order_id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    product_id <span class="type">int</span>,</span><br><span class="line">    customer_id <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product (</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customer (</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>拆分之后，<code>myorder</code> 表中的 <code>product_id</code> 和 <code>customer_id</code> 完全依赖于 <code>order_id</code> 主键，而 <code>product</code> 和 <code>customer</code> 表中的其他字段又完全依赖于主键。满足了第二范式的设计！</p></li></ul></li><li><p>第三范式（3NF）</p><ul><li><p>必须先满足第二范式，除开主键的其他列之间不能传递依赖</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> myorder (</span><br><span class="line">    order_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    product_id <span class="type">INT</span>,</span><br><span class="line">    customer_id <span class="type">INT</span>,</span><br><span class="line">    customer_phone <span class="type">VARCHAR</span>(<span class="number">15</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>表中的 <code>customer_phone</code> 有可能依赖于 <code>order_id</code> 、 <code>customer_id</code> 两列，也就不满足了第三范式的设计：其他列之间不能有传递依赖关系。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> myorder (</span><br><span class="line">    order_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    product_id <span class="type">INT</span>,</span><br><span class="line">    customer_id <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customer (</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,<span class="keyword">sql</span></span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    phone <span class="type">VARCHAR</span>(<span class="number">15</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>修改后就不存在其他列之间的传递依赖关系，其他列都只依赖于主键列，满足了第三范式的设计！</p></li><li><p>参考文献：<a href="https://www.bilibili.com/video/BV1Vt411z7wy?p=18&spm_id_from=pageDriver">一天学会 MySQL 数据库</a></p></li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;一、如何使用终端操作数据库&quot;&gt;&lt;a href=&quot;#一、如何使用终端操作数据库&quot; class=&quot;headerlink&quot; title=&quot;一、如何使用终端操作数据库&quot;&gt;&lt;/a&gt;一、如何使用终端操作数据库&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何登陆数据库</summary>
      
    
    
    
    <category term="学习" scheme="https://sssuper-bear.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="数据库" scheme="https://sssuper-bear.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>python实现发送邮件</title>
    <link href="https://sssuper-bear.github.io/2021/05/24/python%E5%AE%9E%E7%8E%B0%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>https://sssuper-bear.github.io/2021/05/24/python%E5%AE%9E%E7%8E%B0%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</id>
    <published>2021-05-24T12:51:13.000Z</published>
    <updated>2021-05-24T12:56:45.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python实现发送邮件"><a href="#python实现发送邮件" class="headerlink" title="python实现发送邮件"></a>python实现发送邮件</h1><h3 id="申请STMP授权码"><a href="#申请STMP授权码" class="headerlink" title="申请STMP授权码"></a>申请STMP授权码</h3><ol><li>在QQ邮箱主界面里面开启POP/SMTP服务：设置-账户-开启pop/smtp服务</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a9dd78322e6675c8be16b.png" alt="img"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a9dd78322e6675c8be16f.png" alt="img"></p><p>2.点击开启pop/smtp服务后，会弹出验证密保，就是通过密保手机号，发送“配置邮件客户端”到1069 0700 69，（自己用手机弄一下就好了），用自己手机发送完后点击“我已发送”</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a9dd78322e6675c8be179.png" alt="img"></p><p>3.点击“我已发送”后会弹出一个开启POP3/SMTP服务的授权码，这个授权码很重要，要记住这个授权码：授权码很重要，然后点击确定。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a9dd78322e6675c8be193.png" alt="img"></p><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">from email.utils import formataddr</span><br><span class="line"></span><br><span class="line">my_sender = &#x27;XXXXXXXXX@qq.com&#x27;  # 发件人邮箱账号</span><br><span class="line">my_pass = &#x27;XXXXXXXXXXXXXXXXX&#x27;  # 发件人SMTP授权码</span><br><span class="line">my_user = &#x27;XXXXXXXXX@qq.com&#x27;  # 收件人邮箱账号，我这边发送给自己</span><br><span class="line">msg = MIMEText(&#x27;出bug了&#x27;, &#x27;plain&#x27;, &#x27;utf-8&#x27;)</span><br><span class="line">msg[&#x27;From&#x27;] = formataddr([&quot;xxxxxx&quot;, my_sender])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号</span><br><span class="line">msg[&#x27;To&#x27;] = formataddr([&quot;xxxxxx&quot;, my_user])  # 括号里的对应收件人邮箱昵称、收件人邮箱账号</span><br><span class="line">msg[&#x27;Subject&#x27;] = &quot;bug&quot;  # 邮件的主题，也可以说是标题</span><br><span class="line"></span><br><span class="line">server = smtplib.SMTP_SSL(&quot;smtp.qq.com&quot;, 465)  # 发件人邮箱中的SMTP服务器</span><br><span class="line">server.login(my_sender, my_pass)  # 括号中对应的是发件人邮箱账号、邮箱密码</span><br><span class="line">server.sendmail(my_sender, [my_user, ], msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span><br><span class="line">server.quit()  # 关闭连接</span><br></pre></td></tr></table></figure><p>参考文献：<a href="https://blog.csdn.net/weixin_38166074/article/details/91350457?utm_term=qq%E9%82%AE%E7%AE%B1%E5%8F%91%E9%82%AE%E4%BB%B6api&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-0-91350457&spm=3001.4430">java编写QQ邮箱发送邮件_调用QQ邮箱接口</a><br><a href="https://juejin.cn/post/6844903865083494408">Python3实现邮箱发送</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python实现发送邮件&quot;&gt;&lt;a href=&quot;#python实现发送邮件&quot; class=&quot;headerlink&quot; title=&quot;python实现发送邮件&quot;&gt;&lt;/a&gt;python实现发送邮件&lt;/h1&gt;&lt;h3 id=&quot;申请STMP授权码&quot;&gt;&lt;a href=&quot;#申请ST</summary>
      
    
    
    
    <category term="代码" scheme="https://sssuper-bear.github.io/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="python" scheme="https://sssuper-bear.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>比特币和区块链</title>
    <link href="https://sssuper-bear.github.io/2021/05/24/%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    <id>https://sssuper-bear.github.io/2021/05/24/%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/</id>
    <published>2021-05-24T12:03:30.000Z</published>
    <updated>2021-05-25T09:47:26.265Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一：比特币：数字货币"><a href="#一：比特币：数字货币" class="headerlink" title="一：比特币：数字货币"></a>一：比特币：数字货币</h3><p><img src= "/img/loading.gif" data-lazy-src="https://pic.imgdb.cn/item/607a6b148322e6675c121da4.png" alt="image-123"></p><ul><li>2008年11月1日 中本聪《白皮书》</li><li>去中心化的电子<strong>记账</strong>系统<ul><li>现在的中心化是谁的：银行，谁谁谁用了多少钱，还剩多少钱*</li><li>很多条交易记录进行打包连接成一个区块，区块再连接起来，成为区块链</li><li>三个问题<ul><li>以谁为准</li><li>为何记账</li><li>如何防伪</li></ul></li><li>记账奖励<ul><li>手续费</li><li>打包奖励<ul><li>每10分钟打一个包，最开始会奖励打包者50个比特币，过了4年之后奖励25个比特币……</li><li>一共有多少个比特币<ul><li>50x6x24x365x4x(1+1/2+1/2*1/2+….)=2100万</li></ul></li></ul></li><li>以谁为准<ul><li>工作量证明（挖矿）：每一个参与的用户都要做一个很难的数学题，这个数学题没有一个人能够通过脑子把它算出来，我们必须一个一个去试，只有你把它尝试出来了才能获得这个奖励，这个过程称之为挖矿。</li><li>挖矿原理<ul><li>哈希函数：<ul><li>我们能够把一个字符串通过一定的运算转换为摘要的形式</li><li>正着算容易反着算难</li><li>sha256（美国国家安全局发明的一种算法）<ul><li>比如输入“Apple”输出一个256位的二进制数</li></ul></li></ul></li><li>原理<ul><li>字符串：前块头部+账单信息+时间戳+随机数<ul><li>改变这个随机数不断去试</li></ul></li><li>hash=sha256（sha256（字符串））</li><li>前n位必须为0</li><li>如果你算对了，你就有资格去打包，就可以把你的哈希值作为新块的头部打一个包，再把这个包接到区块链的后面去。（每个块有头部+信息）</li></ul></li><li>难度n的确定</li></ul></li></ul></li></ul></li></ul></li></ul><p>参考资料：<a href="https://www.youtube.com/watch?v=g_fSistU3MQ">比特币和区块链啥原理？矿机挖矿咋回事？李永乐老师讲比特币(1)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一：比特币：数字货币&quot;&gt;&lt;a href=&quot;#一：比特币：数字货币&quot; class=&quot;headerlink&quot; title=&quot;一：比特币：数字货币&quot;&gt;&lt;/a&gt;一：比特币：数字货币&lt;/h3&gt;&lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; data-lazy</summary>
      
    
    
    
    <category term="科普" scheme="https://sssuper-bear.github.io/categories/%E7%A7%91%E6%99%AE/"/>
    
    
    <category term="科普" scheme="https://sssuper-bear.github.io/tags/%E7%A7%91%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>移动通讯技术</title>
    <link href="https://sssuper-bear.github.io/2021/05/24/%E7%A7%BB%E5%8A%A8%E9%80%9A%E8%AE%AF%E6%8A%80%E6%9C%AF/"/>
    <id>https://sssuper-bear.github.io/2021/05/24/%E7%A7%BB%E5%8A%A8%E9%80%9A%E8%AE%AF%E6%8A%80%E6%9C%AF/</id>
    <published>2021-05-24T12:01:31.000Z</published>
    <updated>2021-05-26T02:22:36.932Z</updated>
    
    <content type="html"><![CDATA[<h3 id="移动通讯技术"><a href="#移动通讯技术" class="headerlink" title="移动通讯技术"></a><a href="https://www.cnblogs.com/SssuperBear/p/14670473.html">移动通讯技术</a></h3><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a6b0c8322e6675c1209ff.png" alt="image-20210107123834018"></p><h4 id="一：移动通讯技术"><a href="#一：移动通讯技术" class="headerlink" title="一：移动通讯技术"></a>一：移动通讯技术</h4><ul><li><p>1G：移动蜂窝技术 </p><ul><li>传输的是模拟信号，只能传输语音不能传输文字，保密性很差，而且通话质量也不好</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a6b0c8322e6675c120a06.png" alt="image-20210107124105969"></p></li><li><p>2G：数字信号</p><ul><li>一段语音，进行采样，转换为数字，再转换为二进制码传输</li><li>这样既能传输语音也能传输文字还能进行加密</li></ul></li><li><p>3G：CDMA（码分多址）</p></li><li><p>4G：OFDMA（正交频分多址）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a6b0c8322e6675c120a0f.png" alt="image-20210107124612998"></p><ul><li>他可以在同一个频段内传输很多个信号。信号彼此是正交的，一个信号最强的时候其他信号为0。这样一来，虽然他们都在一个频段内却不会彼此干扰。</li></ul></li></ul><h4 id="二：5G-5G毫米波"><a href="#二：5G-5G毫米波" class="headerlink" title="二：5G/5G毫米波"></a>二：5G/5G毫米波</h4><ul><li>高速率<ul><li>4G 5G速率对比<ul><li>4G：100Mbps（大约是10M字节每秒）</li><li>5G：2Gbps</li></ul></li><li>香农公式  C=Wlog2（1+S/N）<ul><li>C：速率极限（再怎么编码都超不过这个速率）</li><li>W：频带宽度（1Ghz-2Ghz的频率那么频宽就有1Ghz）</li><li>S：信号功率</li><li>N：噪声功率</li></ul></li><li>4G频段<ul><li>中国移动885M-909Mhz（24Mhz带宽） 930M-954Mhz（24Mhz带宽）</li></ul></li><li>5G频段<ul><li>6Ghz以下（sub6 5G）<ul><li>大概是5倍的4G</li><li>中国移动拿到两个5G频段<ul><li>2515M-2575M（160M带宽）</li><li>4800M-4900M（100M带宽）</li></ul></li></ul></li><li>24Ghz以上（毫米波5G）（24-100Ghz）<ul><li>大概是4倍的sub6 5G</li></ul></li><li>VR眼镜带的时间长了会头晕？<ul><li>视频不够高清</li><li>延迟比较严重</li></ul></li></ul></li></ul></li><li>低延迟<ul><li>4G：10ms-100ms</li><li>5G-sub6：1ms</li><li>5G-毫米波：0.1ms</li><li>工业、远程医疗</li></ul></li><li>大容量<ul><li>4G：2000个/平方公里</li><li>5G：100万个/平方公里</li><li>万物互联</li></ul></li></ul><h3 id="三毫米波5G挑战"><a href="#三毫米波5G挑战" class="headerlink" title="三毫米波5G挑战"></a>三毫米波5G挑战</h3><ul><li><p>频率高、衰减快、覆盖范围小</p></li><li><p>波长短、衍射差（播不能绕过障碍物）、易于遮挡</p></li><li><p>解决方案</p><ul><li><p>波束赋形</p><ul><li>好几根天线，彼此之间相位不同，发生干涉，结果导致向一个方向发射比较强的电磁波</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a6b0c8322e6675c120a18.png" alt="image-20210107130727862"></p></li><li><p>波束追踪</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.imgdb.cn/item/607a6b148322e6675c121d9d.png" alt="image-20210107130937454"></p><ul><li>走哪跟到哪</li></ul></li><li><p>波束反射</p><ul><li>通过墙的反射</li></ul></li><li><p>波束切换</p><ul><li>手机在多个基站之间进行切换</li></ul></li></ul></li></ul><p>参考文献：<a href="https://www.youtube.com/watch?v=VdSFah46d7Y">5G到底是什么？它能成为创造未来的新科技吗？</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;移动通讯技术&quot;&gt;&lt;a href=&quot;#移动通讯技术&quot; class=&quot;headerlink&quot; title=&quot;移动通讯技术&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/SssuperBear/p/14670473.html&quot;&gt;移动通讯技术</summary>
      
    
    
    
    <category term="科普" scheme="https://sssuper-bear.github.io/categories/%E7%A7%91%E6%99%AE/"/>
    
    
    <category term="科普" scheme="https://sssuper-bear.github.io/tags/%E7%A7%91%E6%99%AE/"/>
    
  </entry>
  
</feed>
